{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/store/modules/gekkos/mutations.js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/store/modules/gekkos/mutations.js","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport _objectSpread from \"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.promise\";\nimport _reduceState from \"../../../../../state/reduceState\";\nimport Vue from 'vue';\nimport _ from 'lodash';\nvar reduceState = _reduceState;\nexport var syncGekkos = function syncGekkos(state, data) {\n  if (!data) {\n    return state;\n  }\n\n  state.gekkos = data.live;\n  state.archivedGekkos = data.archive;\n  return state;\n};\nexport var addGekko = function addGekko(state, gekko) {\n  state.gekkos = _objectSpread({}, state.gekkos, _defineProperty({}, gekko.id, gekko));\n  return state;\n};\nexport var updateGekko = function updateGekko(state, update) {\n  if (!update.id || !_.has(state.gekkos, update.id)) {\n    return console.error('cannot update unknown gekko..');\n    ;\n  }\n\n  state.gekkos = _objectSpread({}, state.gekkos, _defineProperty({}, update.id, reduceState(state.gekkos[update.id], update.event)));\n  return state;\n};\nexport var archiveGekko = function archiveGekko(state, id) {\n  if (!_.has(state.gekkos, id)) {\n    return console.error('cannot archive unknown gekko..');\n  }\n\n  state.archivedGekkos = _objectSpread({}, state.archivedGekkos, _defineProperty({}, id, _objectSpread({}, state.gekkos[id], {\n    stopped: true,\n    active: false\n  })));\n  state.gekkos = _.omit(state.gekkos, id);\n  return state;\n};\nexport var errorGekko = function errorGekko(state, data) {\n  if (!_.has(state.gekkos, data.id)) {\n    return console.error('cannot error unknown gekko..');\n  }\n\n  state.gekkos = _objectSpread({}, state.gekkos, _defineProperty({}, data.id, _objectSpread({}, state.gekkos[data.id], {\n    errored: true,\n    errorMessage: data.error\n  })));\n  return state;\n};\nexport var deleteGekko = function deleteGekko(state, id) {\n  if (!_.has(state.archivedGekkos, id)) {\n    return console.error('cannot delete unknown gekko..');\n  }\n\n  state.archivedGekkos = _.omit(state.archivedGekkos, id);\n  return state;\n};",{"version":3,"sources":["src/store/modules/gekkos/mutations.js"],"names":["Vue","_","reduceState","syncGekkos","state","data","gekkos","live","archivedGekkos","archive","addGekko","gekko","id","updateGekko","update","has","console","error","event","archiveGekko","stopped","active","omit","errorGekko","errored","errorMessage","deleteGekko"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,IAAMC,0BAAN;AAEA,OAAO,IAAMC,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACzC,MAAG,CAACA,IAAJ,EAAU;AACR,WAAOD,KAAP;AACD;;AAEDA,QAAME,MAAN,GAAeD,KAAKE,IAApB;AACAH,QAAMI,cAAN,GAAuBH,KAAKI,OAA5B;AACA,SAAOL,KAAP;AACD,CARM;AAUP,OAAO,IAAMM,WAAW,SAAXA,QAAW,CAACN,KAAD,EAAQO,KAAR,EAAkB;AACxCP,QAAME,MAAN,qBACKF,MAAME,MADX,sBAEGK,MAAMC,EAFT,EAEcD,KAFd;AAIA,SAAOP,KAAP;AACD,CANM;AAQP,OAAO,IAAMS,cAAc,SAAdA,WAAc,CAACT,KAAD,EAAQU,MAAR,EAAmB;AAC5C,MAAG,CAACA,OAAOF,EAAR,IAAc,CAACX,EAAEc,GAAF,CAAMX,MAAME,MAAZ,EAAoBQ,OAAOF,EAA3B,CAAlB,EAAkD;AAChD,WAAOI,QAAQC,KAAR,CAAc,+BAAd,CAAP;AAAsD;AACvD;;AAEDb,QAAME,MAAN,qBACKF,MAAME,MADX,sBAEGQ,OAAOF,EAFV,EAEeV,YAAYE,MAAME,MAAN,CAAaQ,OAAOF,EAApB,CAAZ,EAAqCE,OAAOI,KAA5C,CAFf;AAIA,SAAOd,KAAP;AACD,CAVM;AAYP,OAAO,IAAMe,eAAe,SAAfA,YAAe,CAACf,KAAD,EAAQQ,EAAR,EAAe;AACzC,MAAG,CAACX,EAAEc,GAAF,CAAMX,MAAME,MAAZ,EAAoBM,EAApB,CAAJ,EAA6B;AAC3B,WAAOI,QAAQC,KAAR,CAAc,gCAAd,CAAP;AACD;;AAEDb,QAAMI,cAAN,qBACKJ,MAAMI,cADX,sBAEGI,EAFH,oBAGOR,MAAME,MAAN,CAAaM,EAAb,CAHP;AAIIQ,aAAS,IAJb;AAKIC,YAAQ;AALZ;AASAjB,QAAME,MAAN,GAAeL,EAAEqB,IAAF,CAAOlB,MAAME,MAAb,EAAqBM,EAArB,CAAf;AACA,SAAOR,KAAP;AACD,CAhBM;AAkBP,OAAO,IAAMmB,aAAa,SAAbA,UAAa,CAACnB,KAAD,EAAQC,IAAR,EAAiB;AACzC,MAAG,CAACJ,EAAEc,GAAF,CAAMX,MAAME,MAAZ,EAAoBD,KAAKO,EAAzB,CAAJ,EAAkC;AAChC,WAAOI,QAAQC,KAAR,CAAc,8BAAd,CAAP;AACD;;AAEDb,QAAME,MAAN,qBACKF,MAAME,MADX,sBAEGD,KAAKO,EAFR,oBAGOR,MAAME,MAAN,CAAaD,KAAKO,EAAlB,CAHP;AAIIY,aAAS,IAJb;AAKIC,kBAAcpB,KAAKY;AALvB;AASA,SAAOb,KAAP;AACD,CAfM;AAiBP,OAAO,IAAMsB,cAAc,SAAdA,WAAc,CAACtB,KAAD,EAAQQ,EAAR,EAAe;AACxC,MAAG,CAACX,EAAEc,GAAF,CAAMX,MAAMI,cAAZ,EAA4BI,EAA5B,CAAJ,EAAqC;AACnC,WAAOI,QAAQC,KAAR,CAAc,+BAAd,CAAP;AACD;;AAEDb,QAAMI,cAAN,GAAuBP,EAAEqB,IAAF,CAAOlB,MAAMI,cAAb,EAA6BI,EAA7B,CAAvB;AACA,SAAOR,KAAP;AACD,CAPM","sourceRoot":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue","sourcesContent":["import Vue from 'vue'\nimport _ from 'lodash';\nconst reduceState = require('../../../../../state/reduceState');\n\nexport const syncGekkos = (state, data) => {\n  if(!data) {\n    return state;\n  }\n\n  state.gekkos = data.live;\n  state.archivedGekkos = data.archive;\n  return state;\n}\n\nexport const addGekko = (state, gekko) => {\n  state.gekkos = {\n    ...state.gekkos,\n    [gekko.id]: gekko\n  }\n  return state;\n}\n\nexport const updateGekko = (state, update) => {\n  if(!update.id || !_.has(state.gekkos, update.id)) {\n    return console.error('cannot update unknown gekko..');;\n  }\n\n  state.gekkos = {\n    ...state.gekkos,\n    [update.id]: reduceState(state.gekkos[update.id], update.event)\n  }\n  return state;\n}\n\nexport const archiveGekko = (state, id) => {\n  if(!_.has(state.gekkos, id)) {\n    return console.error('cannot archive unknown gekko..');\n  }\n\n  state.archivedGekkos = {\n    ...state.archivedGekkos,\n    [id]: {\n      ...state.gekkos[id],\n      stopped: true,\n      active: false\n    }\n  }\n\n  state.gekkos = _.omit(state.gekkos, id);\n  return state;\n}\n\nexport const errorGekko = (state, data) => {\n  if(!_.has(state.gekkos, data.id)) {\n    return console.error('cannot error unknown gekko..');\n  }\n\n  state.gekkos = {\n    ...state.gekkos,\n    [data.id]: {\n      ...state.gekkos[data.id],\n      errored: true,\n      errorMessage: data.error\n    }\n  }\n\n  return state;\n}\n\nexport const deleteGekko = (state, id) => {\n  if(!_.has(state.archivedGekkos, id)) {\n    return console.error('cannot delete unknown gekko..');\n  }\n\n  state.archivedGekkos = _.omit(state.archivedGekkos, id);\n  return state;\n}"]}]}