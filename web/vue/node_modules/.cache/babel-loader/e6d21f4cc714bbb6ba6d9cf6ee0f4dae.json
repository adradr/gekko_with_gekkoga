{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/backtester/result/roundtripTable.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/backtester/result/roundtripTable.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  props: ['roundtrips'],\n  data: function data() {\n    return {};\n  },\n  methods: {\n    diff: function diff(n) {\n      return moment.duration(n).humanize();\n    },\n    humanizeDuration: function humanizeDuration(n) {\n      return window.humanizeDuration(n);\n    },\n    fmt: function fmt(date) {\n      // roundtrips coming out of a backtest\n      // are unix timestamp, live roundtrips\n      // are date strings.\n      // TODO: normalize\n      var mom;\n\n      if (_.isNumber(date)) {\n        mom = moment.unix(date);\n      } else {\n        mom = moment(date).utc();\n      }\n\n      return mom.utc().format('YYYY-MM-DD HH:mm');\n    },\n    round: function round(n) {\n      return (+n).toFixed(3);\n    }\n  }\n};",{"version":3,"sources":["roundtripTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,SAAA,CAAA,YAAA,CADA;AAEA,QAAA,gBAAA;AACA,WAAA,EAAA;AACA,GAJA;AAKA,WAAA;AACA,UAAA;AAAA,aAAA,OAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA;AAAA,KADA;AAEA,sBAAA,0BAAA,CAAA;AAAA,aAAA,OAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,KAFA;AAGA,SAAA,mBAAA;AAEA;AACA;AACA;AACA;AAEA,UAAA,GAAA;;AAEA,UAAA,EAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,OAAA,IAAA,CAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,cAAA,OAAA,IAAA,EAAA,GAAA,EAAA;AACA;;AAEA,aAAA,IAAA,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAA;AACA,KAnBA;AAoBA,WAAA;AAAA,aAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAAA;AApBA;AALA,CAAA","sourcesContent":["<template lang='pug'>\n  .contain.roundtrips\n    h2 Roundtrips\n    table(v-if='roundtrips.length')\n      thead\n        tr\n          th Entry at (UTC)\n          th Exit at (UTC)\n          th Exposure\n          th Entry balance\n          th Exit balance\n          th P&amp;L\n          th Profit\n        tr(v-for='rt in roundtrips')\n          td {{ fmt(rt.entryAt) }}\n          td {{ fmt(rt.exitAt) }}\n          td {{ diff(rt.duration) }}\n          td {{ round(rt.entryBalance) }}\n          td {{ round(rt.exitBalance) }}\n          template(v-if=\"Math.sign(rt.pnl)===-1\")\n            td.loss {{ Math.sign(rt.pnl)*rt.pnl.toFixed(2) }}\n            td.loss {{ rt.profit.toFixed(2) }}%\n          template(v-else)\n            td.profit {{ rt.pnl.toFixed(2) }}\n            td.profit {{ rt.profit.toFixed(2) }}%\n    div(v-if='!roundtrips.length')\n      p Not enough data to display\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  props: ['roundtrips'],\n  data: () => {\n    return {}\n  },\n  methods: {\n    diff: n => moment.duration(n).humanize(),\n    humanizeDuration: (n) => window.humanizeDuration(n),\n    fmt: date => {\n\n      // roundtrips coming out of a backtest\n      // are unix timestamp, live roundtrips\n      // are date strings.\n      // TODO: normalize\n\n      let mom;\n\n      if(_.isNumber(date)) {\n        mom = moment.unix(date);\n      } else {\n        mom = moment(date).utc();\n      }\n\n      return mom.utc().format('YYYY-MM-DD HH:mm');\n    },\n    round: n => (+n).toFixed(3),\n  },\n}\n</script>\n\n<style>\n\n.roundtrips {\n  margin-top: 50px;\n  margin-bottom: 50px;\n}\n\n.roundtrips table {\n  width: 100%;\n}\n\n.roundtrips table th,\n.roundtrips table td {\n  border: 1px solid #c6cbd1;\n  padding: 8px 12px;\n}\n\n.roundtrips table td.loss {\n  color: red;\n  text-align: right;\n}\n.roundtrips table td.profit {\n  color: green;\n  text-align: right;\n}\n\n.roundtrips table tr:nth-child(2n) {\n  background-color: #f6f8fa;\n}\n\n</style>\n"],"sourceRoot":"src/components/backtester/result"}]}