{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/exchangepicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/exchangepicker.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport rangePicker from './rangepicker.vue';\nimport rangeCreator from './rangecreator.vue';\nimport { get } from '../../../tools/ajax';\nexport default {\n  props: ['onlyTradable', 'onlyImportable'],\n  data: function data() {\n    return {\n      exchange: 'poloniex'\n    };\n  },\n  created: function created() {\n    this.emitExchange();\n  },\n  computed: {\n    exchanges: function exchanges() {\n      var exchanges = Object.assign({}, this.$store.state.exchanges);\n      if (_.isEmpty(exchanges)) return false;\n\n      if (this.onlyTradable) {\n        _.each(exchanges, function (e, name) {\n          if (!e.tradable) delete exchanges[name];\n        });\n      }\n\n      if (this.onlyImportable) {\n        _.each(exchanges, function (e, name) {\n          if (!e.importable) delete exchanges[name];\n        });\n      }\n\n      return exchanges;\n    }\n  },\n  watch: {\n    exchanges: function exchanges() {\n      this.emitExchange();\n    },\n    exchange: function exchange() {\n      this.emitExchange();\n    }\n  },\n  methods: {\n    emitExchange: function emitExchange() {\n      this.$emit('exchange', this.exchange);\n    }\n  }\n};",{"version":3,"sources":["exchangepicker.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,YAAA,MAAA,oBAAA;AACA,SAAA,GAAA,QAAA,qBAAA;AAEA,eAAA;AACA,SAAA,CAAA,cAAA,EAAA,gBAAA,CADA;AAEA,QAAA,gBAAA;AACA,WAAA;AACA,gBAAA;AADA,KAAA;AAGA,GANA;AAOA,WAAA,mBAAA;AACA,SAAA,YAAA;AACA,GATA;AAUA,YAAA;AACA,eAAA,qBAAA;AAEA,UAAA,YAAA,OAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAEA,UAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EACA,OAAA,KAAA;;AAEA,UAAA,KAAA,YAAA,EAAA;AACA,UAAA,IAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,IAAA,EAAA;AACA,cAAA,CAAA,EAAA,QAAA,EACA,OAAA,UAAA,IAAA,CAAA;AACA,SAHA;AAIA;;AAEA,UAAA,KAAA,cAAA,EAAA;AACA,UAAA,IAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,IAAA,EAAA;AACA,cAAA,CAAA,EAAA,UAAA,EACA,OAAA,UAAA,IAAA,CAAA;AACA,SAHA;AAIA;;AAEA,aAAA,SAAA;AACA;AAvBA,GAVA;AAoCA,SAAA;AACA,eAAA,qBAAA;AAAA,WAAA,YAAA;AAAA,KADA;AAEA,cAAA,oBAAA;AAAA,WAAA,YAAA;AAAA;AAFA,GApCA;AAyCA,WAAA;AACA,kBAAA,wBAAA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,QAAA;AACA;AAHA;AAzCA,CAAA","sourcesContent":["<template lang='pug'>\ndiv\n  .mx1\n    label(for='exchange').wrapper Exchange:\n    .custom-select.button\n      select(v-model='exchange')\n        option(v-for='(market, e) in exchanges') {{ e }}\n</template>\n\n<script>\n\nimport _ from 'lodash'\nimport rangePicker from './rangepicker.vue'\nimport rangeCreator from './rangecreator.vue'\nimport { get } from '../../../tools/ajax'\n\nexport default {\n  props: ['onlyTradable', 'onlyImportable'],\n  data: () => {\n    return {\n      exchange: 'poloniex',\n    };\n  },\n  created: function() {\n    this.emitExchange();\n  },\n  computed: {\n    exchanges: function() {\n\n      let exchanges = Object.assign({}, this.$store.state.exchanges);\n\n      if(_.isEmpty(exchanges))\n        return false;\n\n      if(this.onlyTradable) {\n        _.each(exchanges, (e, name) => {\n          if(!e.tradable)\n            delete exchanges[name];\n        });\n      }\n\n      if(this.onlyImportable) {\n        _.each(exchanges, (e, name) => {\n          if(!e.importable)\n            delete exchanges[name];\n        });\n      }\n\n      return exchanges;\n    }\n  },\n\n  watch: {\n    exchanges: function() { this.emitExchange() },\n    exchange: function() { this.emitExchange() }\n  },\n\n  methods: {\n    emitExchange: function() {\n      this.$emit('exchange', this.exchange);\n    }\n  }\n}\n</script>\n</style>\n"],"sourceRoot":"src/components/global/configbuilder"}]}