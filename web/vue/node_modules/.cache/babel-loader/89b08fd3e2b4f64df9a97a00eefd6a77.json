{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/config/config.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/config/config.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport apiConfigBuilder from './apiConfigBuilder.vue';\nimport { post } from '../../tools/ajax';\nexport default {\n  components: {\n    apiConfigBuilder: apiConfigBuilder\n  },\n  data: function data() {\n    return {\n      addApiToggle: false\n    };\n  },\n  methods: {\n    openAddApi: function openAddApi() {\n      this.addApiToggle = true;\n    },\n    removeApiKey: function removeApiKey(exchange) {\n      if (!confirm('Are you sure you want to delete these API keys?')) return;\n      post('removeApiKey', {\n        exchange: exchange\n      }, function (error, response) {\n        if (error) return alert(error);\n      });\n    }\n  },\n  computed: {\n    apiKeySets: function apiKeySets() {\n      return this.$store.state.apiKeys;\n    }\n  },\n  watch: {\n    apiKeySets: function apiKeySets() {\n      this.addApiToggle = false;\n    }\n  }\n};",{"version":3,"sources":["config.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA,OAAA,gBAAA,MAAA,wBAAA;AACA,SAAA,IAAA,QAAA,kBAAA;AAEA,eAAA;AACA,cAAA;AACA;AADA,GADA;AAIA,QAAA,gBAAA;AACA,WAAA;AACA,oBAAA;AADA,KAAA;AAGA,GARA;AASA,WAAA;AACA,gBAAA,sBAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAHA;AAIA,kBAAA,sBAAA,QAAA,EAAA;AACA,UAAA,CAAA,QAAA,iDAAA,CAAA,EACA;AAEA,WAAA,cAAA,EAAA;AAAA;AAAA,OAAA,EAAA,UAAA,KAAA,EAAA,QAAA,EAAA;AACA,YAAA,KAAA,EACA,OAAA,MAAA,KAAA,CAAA;AACA,OAHA;AAIA;AAZA,GATA;AAuBA,YAAA;AACA,gBAAA,sBAAA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AAHA,GAvBA;AA4BA,SAAA;AACA,gBAAA,sBAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA;AAHA;AA5BA,CAAA","sourcesContent":["<template lang='pug'>\ndiv.contain\n  h2 Config\n  .hr\n  h3 Available API keys\n  p(v-if='!apiKeySets.length')\n    em You don't have any API keys yet.\n  ul\n    li(v-for='exchange in apiKeySets') {{ exchange }} (\n      a(href='#', v-on:click.prevent='removeApiKey(exchange)') remove\n      | )\n  a.btn--primary(href='#', v-if='!addApiToggle', v-on:click.prevent='openAddApi') Add an API key\n  template(v-if='addApiToggle')\n    .hr\n    apiConfigBuilder\n  .hr\n  \n</template>\n\n<script>\nimport apiConfigBuilder from './apiConfigBuilder.vue';\nimport { post } from '../../tools/ajax';\n\nexport default {\n  components: {\n    apiConfigBuilder\n  },\n  data: () => {\n    return {\n      addApiToggle: false,\n    }\n  },\n  methods: {\n    openAddApi: function() {\n      this.addApiToggle = true;\n    },\n    removeApiKey: function(exchange) {\n      if(!confirm('Are you sure you want to delete these API keys?'))\n        return;\n\n      post('removeApiKey', {exchange}, (error, response) => {\n        if(error)\n          return alert(error);\n      });\n    }\n  },\n  computed: {\n    apiKeySets: function() {\n      return this.$store.state.apiKeys\n    }\n  },\n  watch: {\n    apiKeySets: function() {\n      this.addApiToggle = false;\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/config"}]}