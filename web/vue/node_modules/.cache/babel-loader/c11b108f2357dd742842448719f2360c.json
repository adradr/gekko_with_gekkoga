{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/gekko/list.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/gekko/list.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// global moment\n// global humanizeDuration\nexport default {\n  created: function created() {\n    var _this = this;\n\n    this.timer = setInterval(function () {\n      _this.now = moment();\n    }, 1000);\n  },\n  destroyed: function destroyed() {\n    clearTimeout(this.timer);\n  },\n  data: function data() {\n    return {\n      timer: false,\n      now: moment()\n    };\n  },\n  computed: {\n    stratrunners: function stratrunners() {\n      return _.values(this.$store.state.gekkos).concat(_.values(this.$store.state.archivedGekkos)).filter(function (g) {\n        if (g.logType === 'papertrader') return true;\n        if (g.logType === 'tradebot') return true;\n        return false;\n      });\n    },\n    watchers: function watchers() {\n      return _.values(this.$store.state.gekkos).concat(_.values(this.$store.state.archivedGekkos)).filter(function (g) {\n        return g.logType === 'watcher';\n      });\n    }\n  },\n  methods: {\n    humanizeDuration: function humanizeDuration(n) {\n      return window.humanizeDuration(n);\n    },\n    moment: function (_moment) {\n      function moment(_x) {\n        return _moment.apply(this, arguments);\n      }\n\n      moment.toString = function () {\n        return _moment.toString();\n      };\n\n      return moment;\n    }(function (mom) {\n      return moment.utc(mom);\n    }),\n    fmt: function fmt(mom) {\n      return moment.utc(mom).format('YYYY-MM-DD HH:mm');\n    },\n    round: function round(n) {\n      return (+n).toFixed(3);\n    },\n    timespan: function timespan(a, b) {\n      return this.humanizeDuration(this.moment(a).diff(this.moment(b)));\n    },\n    status: function status(state) {\n      if (state.errored) return 'errored';\n      if (state.stopped) return 'stopped';\n      if (state.active) return 'running';\n      console.log('unknown state:', state);\n    },\n    report: function report(state) {\n      return _.get(state, 'events.latest.performanceReport');\n    }\n  }\n};",{"version":3,"sources":["list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AAEA,eAAA;AACA,WAAA,mBAAA;AAAA;;AACA,SAAA,KAAA,GAAA,YAAA,YAAA;AACA,YAAA,GAAA,GAAA,QAAA;AACA,KAFA,EAEA,IAFA,CAAA;AAGA,GALA;AAMA,aAAA,qBAAA;AACA,iBAAA,KAAA,KAAA;AACA,GARA;AASA,QAAA,gBAAA;AACA,WAAA;AACA,aAAA,KADA;AAEA,WAAA;AAFA,KAAA;AAIA,GAdA;AAeA,YAAA;AACA,kBAAA,wBAAA;AACA,aAAA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EACA,MADA,CACA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA,CADA,EAEA,MAFA,CAEA,aAAA;AACA,YAAA,EAAA,OAAA,KAAA,aAAA,EACA,OAAA,IAAA;AAEA,YAAA,EAAA,OAAA,KAAA,UAAA,EACA,OAAA,IAAA;AAEA,eAAA,KAAA;AACA,OAVA,CAAA;AAWA,KAbA;AAcA,cAAA,oBAAA;AACA,aAAA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EACA,MADA,CACA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA,CADA,EAEA,MAFA,CAEA;AAAA,eAAA,EAAA,OAAA,KAAA,SAAA;AAAA,OAFA,CAAA;AAGA;AAlBA,GAfA;AAmCA,WAAA;AACA,sBAAA,0BAAA,CAAA;AAAA,aAAA,OAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,KADA;AAEA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAA;AAAA,aAAA,OAAA,GAAA,CAAA,GAAA,CAAA;AAAA,KAAA,CAFA;AAGA,SAAA;AAAA,aAAA,OAAA,GAAA,CAAA,GAAA,EAAA,MAAA,CAAA,kBAAA,CAAA;AAAA,KAHA;AAIA,WAAA;AAAA,aAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAAA,KAJA;AAKA,cAAA,kBAAA,CAAA,EAAA,CAAA,EAAA;AACA,aAAA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAPA;AAQA,YAAA,uBAAA;AACA,UAAA,MAAA,OAAA,EACA,OAAA,SAAA;AACA,UAAA,MAAA,OAAA,EACA,OAAA,SAAA;AACA,UAAA,MAAA,MAAA,EACA,OAAA,SAAA;AAEA,cAAA,GAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KAjBA;AAkBA,YAAA,uBAAA;AACA,aAAA,EAAA,GAAA,CAAA,KAAA,EAAA,iCAAA,CAAA;AACA;AApBA;AAnCA,CAAA","sourcesContent":["<template lang='pug'>\n  .contain.py2\n    h3 Market watchers\n    .text(v-if='!watchers.length')\n      p You don't have any market watchers.\n    table.full.clickable(v-if='watchers.length')\n      thead\n        tr\n          th exchange\n          th currency\n          th asset\n          th status\n          th started at\n          th last update\n          th duration\n      tbody\n        tr.clickable(v-for='gekko in watchers', v-on:click='$router.push({path: `/live-gekkos/${gekko.id}`})')\n          td {{ gekko.config.watch.exchange }}\n          td {{ gekko.config.watch.currency }}\n          td {{ gekko.config.watch.asset }}\n          td {{ status(gekko) }}\n          td\n            template(v-if='gekko.events.initial.candle') {{ fmt(gekko.events.initial.candle.start) }}\n          td\n            template(v-if='gekko.events.latest.candle') {{ fmt(gekko.events.latest.candle.start) }}\n          td\n            template(v-if='gekko.events.initial.candle && gekko.events.latest.candle') {{ timespan(gekko.events.latest.candle.start, gekko.events.initial.candle.start) }}\n    h3 Strat runners\n    .text(v-if='!stratrunners.length')\n      p You don't have any stratrunners.\n    table.full(v-if='stratrunners.length')\n      thead\n        tr\n          th exchange\n          th currency\n          th asset\n          th status\n          th duration\n          th strategy\n          th PnL\n          th type\n          th trades\n      tbody\n        tr.clickable(v-for='gekko in stratrunners', v-on:click='$router.push({path: `/live-gekkos/${gekko.id}`})')\n          td {{ gekko.config.watch.exchange }}\n          td {{ gekko.config.watch.currency }}\n          td {{ gekko.config.watch.asset }}\n          td {{ status(gekko) }}\n          td\n            template(v-if='gekko.events.initial.candle && gekko.events.latest.candle') {{ timespan(gekko.events.latest.candle.start, gekko.events.initial.candle.start) }}\n          td {{ gekko.config.tradingAdvisor.method }}\n          td\n            template(v-if='!report(gekko)') 0\n            template(v-if='report(gekko)') {{ round(report(gekko).profit) }} {{ report(gekko).currency }}\n          td {{ gekko.logType }}\n          td\n            template(v-if='!gekko.events.tradeCompleted') 0\n            template(v-if='gekko.events.tradeCompleted') {{ gekko.events.tradeCompleted.length }}\n    .hr\n    h2 Start a new live Gekko\n    router-link.btn--primary(to='/live-gekkos/new') Start a new live Gekko!\n</template>\n\n<script>\n// global moment\n// global humanizeDuration\n\nexport default {\n  created: function() {\n    this.timer = setInterval(() => {\n      this.now = moment();\n    }, 1000)\n  },\n  destroyed: function() {\n    clearTimeout(this.timer);\n  },\n  data: () => {\n    return {\n      timer: false,\n      now: moment()\n    }\n  },\n  computed: {\n    stratrunners: function() {\n      return _.values(this.$store.state.gekkos)\n        .concat(_.values(this.$store.state.archivedGekkos))\n          .filter(g => {\n            if(g.logType === 'papertrader')\n              return true;\n\n            if(g.logType === 'tradebot')\n              return true;\n\n            return false;\n          })\n    },\n    watchers: function() {\n      return _.values(this.$store.state.gekkos)\n        .concat(_.values(this.$store.state.archivedGekkos))\n        .filter(g => g.logType === 'watcher')\n    }\n  },\n  methods: {\n    humanizeDuration: (n) => window.humanizeDuration(n),\n    moment: mom => moment.utc(mom),\n    fmt: mom => moment.utc(mom).format('YYYY-MM-DD HH:mm'),\n    round: n => (+n).toFixed(3),\n    timespan: function(a, b) {\n      return this.humanizeDuration(this.moment(a).diff(this.moment(b)))\n    },\n    status: state => {\n      if(state.errored)\n        return 'errored';\n      if(state.stopped)\n        return 'stopped';\n      if(state.active)\n        return 'running';\n\n      console.log('unknown state:', state);\n    },\n    report: state => {\n      return _.get(state, 'events.latest.performanceReport');\n    }\n  }\n}\n</script>\n\n<style>\ntable.clickable {\n  border-collapse: separate;\n}\n\ntr.clickable td:nth-child(1) {\n  padding-left: 5px;\n}\n\ntr.clickable {\n  cursor: pointer;\n}\ntr.clickable:hover {\n  background: rgba(216,216,216,.99);\n}\n</style>\n"],"sourceRoot":"src/components/gekko"}]}