{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/store/index.js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/store/index.js","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport _ from 'lodash';\nimport * as importMutations from './modules/imports/mutations';\nimport * as gekkoMutations from './modules/gekkos/mutations';\nimport * as notificationMutations from './modules/notifications/mutations';\nimport * as configMutations from './modules/config/mutations';\nVue.use(Vuex);\nvar debug = process.env.NODE_ENV !== 'production';\nvar mutations = {};\n\n_.merge(mutations, importMutations);\n\n_.merge(mutations, gekkoMutations);\n\n_.merge(mutations, notificationMutations);\n\n_.merge(mutations, configMutations);\n\nexport default new Vuex.Store({\n  state: {\n    warnings: {\n      connected: true // assume we will connect\n\n    },\n    imports: [],\n    gekkos: {},\n    archivedGekkos: {},\n    connection: {\n      disconnected: false,\n      reconnected: false\n    },\n    apiKeys: [],\n    exchanges: {}\n  },\n  mutations: mutations,\n  strict: debug\n});",{"version":3,"sources":["src/store/index.js"],"names":["Vue","Vuex","_","importMutations","gekkoMutations","notificationMutations","configMutations","use","debug","process","env","NODE_ENV","mutations","merge","Store","state","warnings","connected","imports","gekkos","archivedGekkos","connection","disconnected","reconnected","apiKeys","exchanges","strict"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,KAAKC,eAAZ,MAAiC,6BAAjC;AACA,OAAO,KAAKC,cAAZ,MAAgC,4BAAhC;AACA,OAAO,KAAKC,qBAAZ,MAAuC,mCAAvC;AACA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AAEAN,IAAIO,GAAJ,CAAQN,IAAR;AAEA,IAAMO,QAAQC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;AAEA,IAAIC,YAAY,EAAhB;;AAEAV,EAAEW,KAAF,CAAQD,SAAR,EAAmBT,eAAnB;;AACAD,EAAEW,KAAF,CAAQD,SAAR,EAAmBR,cAAnB;;AACAF,EAAEW,KAAF,CAAQD,SAAR,EAAmBP,qBAAnB;;AACAH,EAAEW,KAAF,CAAQD,SAAR,EAAmBN,eAAnB;;AAEA,eAAe,IAAIL,KAAKa,KAAT,CAAe;AAC5BC,SAAO;AACLC,cAAU;AACRC,iBAAW,IADH,CACS;;AADT,KADL;AAILC,aAAS,EAJJ;AAKLC,YAAQ,EALH;AAMLC,oBAAgB,EANX;AAOLC,gBAAY;AACVC,oBAAc,KADJ;AAEVC,mBAAa;AAFH,KAPP;AAWLC,aAAS,EAXJ;AAYLC,eAAW;AAZN,GADqB;AAe5Bb,sBAf4B;AAgB5Bc,UAAQlB;AAhBoB,CAAf,CAAf","sourceRoot":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport _ from 'lodash'\n\nimport * as importMutations from './modules/imports/mutations'\nimport * as gekkoMutations from './modules/gekkos/mutations'\nimport * as notificationMutations from './modules/notifications/mutations'\nimport * as configMutations from './modules/config/mutations'\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== 'production'\n\nlet mutations = {};\n\n_.merge(mutations, importMutations);\n_.merge(mutations, gekkoMutations);\n_.merge(mutations, notificationMutations);\n_.merge(mutations, configMutations);\n\nexport default new Vuex.Store({\n  state: {\n    warnings: {\n      connected: true, // assume we will connect\n    },\n    imports: [],\n    gekkos: {},\n    archivedGekkos: {},\n    connection: {\n      disconnected: false,\n      reconnected: false\n    },\n    apiKeys: [],\n    exchanges: {}\n  },\n  mutations,\n  strict: debug\n})"]}]}