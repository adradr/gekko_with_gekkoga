{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/typepicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/typepicker.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  created: function created() {\n    this.emitType();\n  },\n  data: function data() {\n    return {\n      types: ['paper trader', 'market watcher', 'tradebot'],\n      selectedTypeIndex: 0\n    };\n  },\n  methods: {\n    emitType: function emitType() {\n      this.$emit('type', this.type);\n    }\n  },\n  watch: {\n    type: function type() {\n      this.emitType();\n    }\n  },\n  computed: {\n    type: function type() {\n      return this.types[this.selectedTypeIndex];\n    }\n  }\n};",{"version":3,"sources":["typepicker.vue"],"names":[],"mappings":";;;;;;;;;;;AAaA,eAAA;AACA,WAAA,mBAAA;AACA,SAAA,QAAA;AACA,GAHA;AAIA,QAAA,gBAAA;AACA,WAAA;AACA,aAAA,CAAA,cAAA,EAAA,gBAAA,EAAA,UAAA,CADA;AAEA,yBAAA;AAFA,KAAA;AAIA,GATA;AAUA,WAAA;AACA,cAAA,oBAAA;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AACA;AAHA,GAVA;AAeA,SAAA;AACA,UAAA,gBAAA;AACA,WAAA,QAAA;AACA;AAHA,GAfA;AAoBA,YAAA;AACA,UAAA,gBAAA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,iBAAA,CAAA;AACA;AAHA;AApBA,CAAA","sourcesContent":["<template lang='pug'>\ndiv\n  h3 Type\n  template\n    label(for='type').wrapper What do you want to do with gekko?\n    form.radio.grd\n      div.grd-row(v-for='(type, i) in types').m1\n        input.grd-row-col-1-6(type='radio', :value='i', v-model='selectedTypeIndex')\n        label.grd-row-col-5-6(:for='i') {{ type }}\n</template>\n\n<script>\n\nexport default {\n  created: function() {\n    this.emitType();\n  },\n  data: () => {\n    return {\n      types: ['paper trader', 'market watcher', 'tradebot'],\n      selectedTypeIndex: 0,\n    }\n  },\n  methods: {\n    emitType: function() {\n      this.$emit('type', this.type);\n    }\n  },\n  watch: {\n    type: function() {\n      this.emitType();\n    }\n  },\n  computed: {\n    type: function() {\n      return this.types[ this.selectedTypeIndex ];\n    }\n  }\n}\n</script>\n\n<style>\n\n.radio label {\n  margin-top: 0;\n}\n\n</style>\n"],"sourceRoot":"src/components/global/configbuilder"}]}