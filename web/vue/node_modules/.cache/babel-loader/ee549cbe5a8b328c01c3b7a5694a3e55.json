{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/data/import/importer.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/data/import/importer.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { post } from '../../../tools/ajax';\nimport spinner from '../../global/blockSpinner.vue';\nimport importConfigBuilder from './importConfigBuilder.vue';\nimport marked from '../../../tools/marked';\nvar intro = marked(\"\\n\\n## Import data\\n\\nThe importer can download historical market data directly from the exchange.\\n\\n\");\nexport default {\n  components: {\n    importConfigBuilder: importConfigBuilder,\n    spinner: spinner\n  },\n  data: function data() {\n    return {\n      intro: intro,\n      config: {}\n    };\n  },\n  computed: {\n    imports: function imports() {\n      return this.$store.state.imports;\n    }\n  },\n  methods: {\n    daysApart: function daysApart(range) {\n      var to = moment(range.to);\n      var from = moment(range.from);\n      return to.diff(from, 'days');\n    },\n    updateConfig: function updateConfig(config) {\n      this.config = config;\n    },\n    run: function run() {\n      var _this = this;\n\n      var daysApart = this.daysApart(this.config.importer.daterange);\n      if (daysApart < 1) return alert('You can only import at least one day of data..');\n      var exchange = this.$store.state.exchanges[this.config.watch.exchange];\n\n      if (\"exchangeMaxHistoryAge\" in exchange) {\n        if (moment(this.config.importer.daterange.from) < moment().subtract(exchange.exchangeMaxHistoryAge, \"days\")) {\n          return alert('Your date from is too old for ' + this.config.watch.exchange + '. It supports only the last ' + exchange.exchangeMaxHistoryAge + ' days..');\n        }\n      }\n\n      post('import', this.config, function (error, response) {\n        if (error) return alert(error);\n\n        _this.$store.commit('addImport', response);\n\n        _this.$router.push({\n          path: \"/data/importer/import/\".concat(response.id)\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["importer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,SAAA,IAAA,QAAA,qBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,mBAAA,MAAA,2BAAA;AAEA,OAAA,MAAA,MAAA,uBAAA;AAEA,IAAA,QAAA,gHAAA;AAQA,eAAA;AACA,cAAA;AACA,4CADA;AAEA;AAFA,GADA;AAKA,QAAA,gBAAA;AACA,WAAA;AACA,kBADA;AAEA,cAAA;AAFA,KAAA;AAIA,GAVA;AAWA,YAAA;AACA,aAAA,mBAAA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AAHA,GAXA;AAgBA,WAAA;AACA,eAAA,mBAAA,KAAA,EAAA;AACA,UAAA,KAAA,OAAA,MAAA,EAAA,CAAA;AACA,UAAA,OAAA,OAAA,MAAA,IAAA,CAAA;AAEA,aAAA,GAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA;AACA,KANA;AAOA,kBAAA,sBAAA,MAAA,EAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,KATA;AAUA,SAAA,eAAA;AAAA;;AACA,UAAA,YAAA,KAAA,SAAA,CAAA,KAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA;AAEA,UAAA,YAAA,CAAA,EACA,OAAA,MAAA,gDAAA,CAAA;AAEA,UAAA,WAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA;;AACA,UAAA,2BAAA,QAAA,EAAA;AACA,YAAA,OAAA,KAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA,IAAA,IAAA,SAAA,QAAA,CAAA,SAAA,qBAAA,EAAA,MAAA,CAAA,EAAA;AACA,iBAAA,MAAA,mCAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,GAAA,8BAAA,GAAA,SAAA,qBAAA,GAAA,SAAA,CAAA;AACA;AACA;;AAEA,WAAA,QAAA,EAAA,KAAA,MAAA,EAAA,UAAA,KAAA,EAAA,QAAA,EAAA;AACA,YAAA,KAAA,EACA,OAAA,MAAA,KAAA,CAAA;;AAEA,cAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,QAAA;;AAEA,cAAA,OAAA,CAAA,IAAA,CAAA;AACA,gDAAA,SAAA,EAAA;AADA,SAAA;AAGA,OATA;AAUA;AAjCA;AAhBA,CAAA","sourcesContent":["<template lang='pug'>\n  div.contain.my2\n    div.text(v-html='intro')\n    .hr\n    h3 Currently running imports\n    p(v-if='imports.length === 0') You currently don't have any imports running.\n    ul(v-if='imports.length')\n      li(v-for='_import in imports')\n        router-link(:to='\"/data/importer/import/\" + _import.id') {{ _import.watch.exchange }}:{{ _import.watch.currency }}/{{ _import.watch.asset }}\n\n    .hr\n    h3 Start a new import\n    import-config-builder(v-on:config='updateConfig')\n    .hr\n    .txt--center\n      a.w100--s.my1.btn--primary(href='#', v-on:click.prevent='run') Import\n</template>\n\n<script>\n\nimport { post } from '../../../tools/ajax'\nimport spinner from '../../global/blockSpinner.vue'\nimport importConfigBuilder from './importConfigBuilder.vue'\n\nimport marked from '../../../tools/marked'\n\nlet intro = marked(`\n\n## Import data\n\nThe importer can download historical market data directly from the exchange.\n\n`)\n\nexport default {\n  components: {\n    importConfigBuilder,\n    spinner\n  },\n  data: () => {\n    return {\n      intro,\n      config: {}\n    }\n  },\n  computed: {\n    imports: function() {\n      return this.$store.state.imports\n    }\n  },\n  methods: {\n    daysApart: function(range) {\n      let to = moment(range.to);\n      let from = moment(range.from);\n\n      return to.diff(from, 'days');\n    },\n    updateConfig: function(config) {\n      this.config = config;\n    },\n    run: function() {\n      let daysApart = this.daysApart(this.config.importer.daterange);\n\n      if(daysApart < 1)\n        return alert('You can only import at least one day of data..')\n\n      let exchange = this.$store.state.exchanges[this.config.watch.exchange];\n      if (\"exchangeMaxHistoryAge\" in exchange) {\n        if (moment(this.config.importer.daterange.from) < moment().subtract(exchange.exchangeMaxHistoryAge, \"days\")) {\n          return alert('Your date from is too old for ' + this.config.watch.exchange + '. It supports only the last ' + exchange.exchangeMaxHistoryAge + ' days..');\n        }\n      }\n\n      post('import', this.config, (error, response) => {\n        if(error)\n          return alert(error);\n\n        this.$store.commit('addImport', response);\n\n        this.$router.push({\n          path: `/data/importer/import/${response.id}`,\n        })\n      });\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components/data/import"}]}