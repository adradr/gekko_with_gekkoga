{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/store/modules/config/sync.js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/store/modules/config/sync.js","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.promise\";\nimport { get } from '../../../tools/ajax';\nimport store from '../../';\nimport { bus } from '../../../components/global/ws';\n\nvar transformMarkets = function transformMarkets(backendData) {\n  if (!backendData) {\n    return {};\n  }\n\n  var exchangesRaw = backendData;\n  var exchangesTemp = {};\n  exchangesRaw.forEach(function (e) {\n    exchangesTemp[e.slug] = exchangesTemp[e.slug] || {\n      markets: {}\n    };\n    e.markets.forEach(function (pair) {\n      var _pair$pair = _slicedToArray(pair['pair'], 2),\n          currency = _pair$pair[0],\n          asset = _pair$pair[1];\n\n      exchangesTemp[e.slug].markets[currency] = exchangesTemp[e.slug].markets[currency] || [];\n      exchangesTemp[e.slug].markets[currency].push(asset);\n    });\n\n    if (\"exchangeMaxHistoryAge\" in e) {\n      exchangesTemp[e.slug].exchangeMaxHistoryAge = e.exchangeMaxHistoryAge;\n    }\n\n    exchangesTemp[e.slug].importable = e.providesFullHistory ? true : false;\n    exchangesTemp[e.slug].tradable = e.tradable ? true : false;\n    exchangesTemp[e.slug].requires = e.requires;\n  });\n  return exchangesTemp;\n};\n\nvar init = function init() {\n  get('apiKeys', function (err, resp) {\n    store.commit('syncApiKeys', resp);\n  });\n  get('exchanges', function (err, resp) {\n    store.commit('syncExchanges', transformMarkets(resp));\n  });\n};\n\nvar sync = function sync() {\n  bus.$on('apiKeys', function (data) {\n    store.commit('syncApiKeys', data.exchanges);\n  });\n};\n\nexport default function () {\n  init();\n  sync();\n}",{"version":3,"sources":["src/store/modules/config/sync.js"],"names":["get","store","bus","transformMarkets","backendData","exchangesRaw","exchangesTemp","forEach","e","slug","markets","pair","currency","asset","push","exchangeMaxHistoryAge","importable","providesFullHistory","tradable","requires","init","err","resp","commit","sync","$on","data","exchanges"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,SAASC,GAAT,QAAoB,+BAApB;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB,cAAe;AACtC,MAAG,CAACC,WAAJ,EAAiB;AACf,WAAO,EAAP;AACD;;AAED,MAAIC,eAAeD,WAAnB;AACA,MAAIE,gBAAgB,EAApB;AAEAD,eAAaE,OAAb,CAAqB,aAAK;AACxBD,kBAAcE,EAAEC,IAAhB,IAAwBH,cAAcE,EAAEC,IAAhB,KAAyB;AAACC,eAAS;AAAV,KAAjD;AAEAF,MAAEE,OAAF,CAAUH,OAAV,CAAmB,gBAAQ;AAAA,sCACCI,KAAK,MAAL,CADD;AAAA,UACnBC,QADmB;AAAA,UACTC,KADS;;AAEzBP,oBAAcE,EAAEC,IAAhB,EAAsBC,OAAtB,CAA8BE,QAA9B,IAA0CN,cAAcE,EAAEC,IAAhB,EAAsBC,OAAtB,CAA8BE,QAA9B,KAA2C,EAArF;AACAN,oBAAcE,EAAEC,IAAhB,EAAsBC,OAAtB,CAA8BE,QAA9B,EAAwCE,IAAxC,CAA8CD,KAA9C;AACD,KAJD;;AAMA,QAAI,2BAA2BL,CAA/B,EAAkC;AAChCF,oBAAcE,EAAEC,IAAhB,EAAsBM,qBAAtB,GAA8CP,EAAEO,qBAAhD;AACD;;AAEDT,kBAAcE,EAAEC,IAAhB,EAAsBO,UAAtB,GAAmCR,EAAES,mBAAF,GAAwB,IAAxB,GAA+B,KAAlE;AACAX,kBAAcE,EAAEC,IAAhB,EAAsBS,QAAtB,GAAiCV,EAAEU,QAAF,GAAa,IAAb,GAAoB,KAArD;AACAZ,kBAAcE,EAAEC,IAAhB,EAAsBU,QAAtB,GAAiCX,EAAEW,QAAnC;AACD,GAhBD;AAkBA,SAAOb,aAAP;AACD,CA3BD;;AA8BA,IAAMc,OAAO,SAAPA,IAAO,GAAM;AACjBpB,MAAI,SAAJ,EAAe,UAACqB,GAAD,EAAMC,IAAN,EAAe;AAC5BrB,UAAMsB,MAAN,CAAa,aAAb,EAA4BD,IAA5B;AACD,GAFD;AAIAtB,MAAI,WAAJ,EAAiB,UAACqB,GAAD,EAAMC,IAAN,EAAe;AAC9BrB,UAAMsB,MAAN,CAAa,eAAb,EAA8BpB,iBAAiBmB,IAAjB,CAA9B;AACD,GAFD;AAGD,CARD;;AAUA,IAAME,OAAO,SAAPA,IAAO,GAAM;AACjBtB,MAAIuB,GAAJ,CAAQ,SAAR,EAAmB,gBAAQ;AACzBxB,UAAMsB,MAAN,CAAa,aAAb,EAA4BG,KAAKC,SAAjC;AACD,GAFD;AAGD,CAJD;;AAMA,eAAe,YAAW;AACxBP;AACAI;AACD","sourceRoot":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue","sourcesContent":["import { get } from '../../../tools/ajax'\nimport store from '../../'\nimport { bus } from '../../../components/global/ws'\n\nconst transformMarkets = backendData => {\n  if(!backendData) {\n    return {};\n  }\n\n  var exchangesRaw = backendData;\n  var exchangesTemp = {};\n\n  exchangesRaw.forEach(e => {\n    exchangesTemp[e.slug] = exchangesTemp[e.slug] || {markets: {}};\n\n    e.markets.forEach( pair => {\n      let [ currency, asset ] = pair['pair'];\n      exchangesTemp[e.slug].markets[currency] = exchangesTemp[e.slug].markets[currency] || [];\n      exchangesTemp[e.slug].markets[currency].push( asset );\n    });\n\n    if (\"exchangeMaxHistoryAge\" in e) {\n      exchangesTemp[e.slug].exchangeMaxHistoryAge = e.exchangeMaxHistoryAge;\n    }\n\n    exchangesTemp[e.slug].importable = e.providesFullHistory ? true : false;\n    exchangesTemp[e.slug].tradable = e.tradable ? true : false;\n    exchangesTemp[e.slug].requires = e.requires;\n  });\n\n  return exchangesTemp;\n}\n\n\nconst init = () => {\n  get('apiKeys', (err, resp) => {\n    store.commit('syncApiKeys', resp);\n  });\n\n  get('exchanges', (err, resp) => {\n    store.commit('syncExchanges', transformMarkets(resp));\n  })\n}\n\nconst sync = () => {\n  bus.$on('apiKeys', data => {\n    store.commit('syncApiKeys', data.exchanges);\n  });\n}\n\nexport default function() {\n  init();\n  sync();\n}\n"]}]}