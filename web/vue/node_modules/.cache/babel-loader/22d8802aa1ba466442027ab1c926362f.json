{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/state/reduceState.js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/state/reduceState.js","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\nimport _defineProperty from \"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/@babel/runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport _objectSpread from \"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n// Redux/vuex inspired reducer, reduces an event into a gekko state.\n// NOTE: this is used by the backend as well as the frontend.\nvar skipInitialEvents = ['marketUpdate'];\nvar skipLatestEvents = ['marketStart', 'stratWarmupCompleted'];\nvar trackAllEvents = ['tradeCompleted', 'advice', 'roundtrip'];\n\nvar reduce = function reduce(state, event) {\n  var type = event.type;\n  var payload = event.payload;\n  state = _objectSpread({}, state, {\n    latestUpdate: new Date()\n  });\n\n  if (trackAllEvents.includes(type)) {\n    if (!state.events[type]) {\n      state = _objectSpread({}, state, {\n        events: _objectSpread({}, state.events, _defineProperty({}, type, [payload]))\n      });\n    } else {\n      state = _objectSpread({}, state, {\n        events: _objectSpread({}, state.events, _defineProperty({}, type, _toConsumableArray(state.events[type]).concat([payload])))\n      });\n    }\n  }\n\n  if (!state.events.initial[type] && !skipInitialEvents.includes(type)) {\n    state = _objectSpread({}, state, {\n      events: _objectSpread({}, state.events, {\n        initial: _objectSpread({}, state.events.initial, _defineProperty({}, type, payload))\n      })\n    });\n  }\n\n  if (!skipLatestEvents.includes(type)) {\n    state = _objectSpread({}, state, {\n      events: _objectSpread({}, state.events, {\n        latest: _objectSpread({}, state.events.latest, _defineProperty({}, type, payload))\n      })\n    });\n  }\n\n  return state;\n}; // export default reduce;\n\n\nexport default reduce;",{"version":3,"sources":["../state/reduceState.js"],"names":["skipInitialEvents","skipLatestEvents","trackAllEvents","reduce","state","event","type","payload","latestUpdate","Date","includes","events","initial","latest"],"mappings":";;;;AAAA;AACA;AAEA,IAAMA,oBAAoB,CAAC,cAAD,CAA1B;AACA,IAAMC,mBAAmB,CAAC,aAAD,EAAgB,sBAAhB,CAAzB;AACA,IAAMC,iBAAiB,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,WAA7B,CAAvB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/B,MAAMC,OAAOD,MAAMC,IAAnB;AACA,MAAMC,UAAUF,MAAME,OAAtB;AAEAH,4BACKA,KADL;AAEEI,kBAAc,IAAIC,IAAJ;AAFhB;;AAKA,MAAGP,eAAeQ,QAAf,CAAwBJ,IAAxB,CAAH,EAAkC;AAChC,QAAG,CAACF,MAAMO,MAAN,CAAaL,IAAb,CAAJ,EAAwB;AACtBF,gCACKA,KADL;AAEEO,kCACKP,MAAMO,MADX,sBAEGL,IAFH,EAEU,CAAEC,OAAF,CAFV;AAFF;AAOD,KARD,MAQO;AACLH,gCACKA,KADL;AAEEO,kCACKP,MAAMO,MADX,sBAEGL,IAFH,qBAEeF,MAAMO,MAAN,CAAaL,IAAb,CAFf,UAEmCC,OAFnC;AAFF;AAOD;AACF;;AAED,MAAG,CAACH,MAAMO,MAAN,CAAaC,OAAb,CAAqBN,IAArB,CAAD,IAA+B,CAACN,kBAAkBU,QAAlB,CAA2BJ,IAA3B,CAAnC,EAAqE;AACnEF,8BACKA,KADL;AAEEO,gCACKP,MAAMO,MADX;AAEEC,mCACKR,MAAMO,MAAN,CAAaC,OADlB,sBAEGN,IAFH,EAEUC,OAFV;AAFF;AAFF;AAUD;;AAED,MAAG,CAACN,iBAAiBS,QAAjB,CAA0BJ,IAA1B,CAAJ,EAAqC;AACnCF,8BACKA,KADL;AAEEO,gCACKP,MAAMO,MADX;AAEEE,kCACKT,MAAMO,MAAN,CAAaE,MADlB,sBAEGP,IAFH,EAEUC,OAFV;AAFF;AAFF;AAUD;;AAED,SAAOH,KAAP;AACD,CAxDD,C,CA0DA;;;eACiBD,M","sourceRoot":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue","sourcesContent":["// Redux/vuex inspired reducer, reduces an event into a gekko state.\n// NOTE: this is used by the backend as well as the frontend.\n\nconst skipInitialEvents = ['marketUpdate'];\nconst skipLatestEvents = ['marketStart', 'stratWarmupCompleted'];\nconst trackAllEvents = ['tradeCompleted', 'advice', 'roundtrip'];\n\nconst reduce = (state, event) => {\n  const type = event.type;\n  const payload = event.payload;\n\n  state = {\n    ...state,\n    latestUpdate: new Date()\n  }\n\n  if(trackAllEvents.includes(type)) {\n    if(!state.events[type]) {\n      state = {\n        ...state,\n        events: {\n          ...state.events,\n          [type]: [ payload ]\n        }\n      }\n    } else {\n      state = {\n        ...state,\n        events: {\n          ...state.events,\n          [type]: [ ...state.events[type], payload ]\n        }\n      }\n    }\n  }\n\n  if(!state.events.initial[type] && !skipInitialEvents.includes(type)) {\n    state = {\n      ...state,\n      events: {\n        ...state.events,\n        initial: {\n          ...state.events.initial,\n          [type]: payload\n        }\n      }\n    }\n  }\n\n  if(!skipLatestEvents.includes(type)) {\n    state = {\n      ...state,\n      events: {\n        ...state.events,\n        latest: {\n          ...state.events.latest,\n          [type]: payload\n        }\n      }\n    }\n  }\n\n  return state;\n}\n\n// export default reduce;\nmodule.exports = reduce;"]}]}