{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/rangepicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/rangepicker.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport { post } from '../../../tools/ajax'; // global moment\n\nexport default {\n  props: ['config'],\n  data: function data() {\n    return {\n      scanned: false,\n      // 'fetching', true\n      ranges: [],\n      selectedRangeIndex: -1,\n      tab: 'scan',\n      from: '',\n      to: ''\n    };\n  },\n  methods: {\n    scan: function scan() {\n      var _this = this;\n\n      this.scanned = 'fetching';\n      this.selectedRangeIndex = -1;\n      post('scan', this.config, function (err, response) {\n        _this.scanned = true;\n        _this.ranges = response;\n        _this.selectedRangeIndex = 0;\n      });\n    },\n    printRange: function printRange(range) {\n      var fmt = function fmt(mom) {\n        return mom.format('YYYY-MM-DD HH:mm');\n      };\n\n      var from = moment.unix(range.from);\n      var to = moment.unix(range.to);\n      var diff = moment.duration(to.diff(from)).humanize();\n      return \"\".concat(fmt(from), \" to \").concat(fmt(to), \" (\").concat(diff, \")\");\n    },\n    fmtTs: function fmtTs(mom) {\n      return moment.unix(mom).utc();\n    },\n    fmt: function fmt(mom) {\n      return mom.utc().format();\n    },\n    emitRange: function emitRange(range) {\n      this.$emit('range', {\n        from: this.fmtTs(range.from),\n        to: this.fmtTs(range.to)\n      });\n    },\n    emitManualEntry: function emitManualEntry() {\n      if (this.from.length < '4' || this.from.length < '4') // this cannot possibly be a valid date\n        return this.$emit('range', {});\n      var from = moment.utc(this.from);\n      var to = moment.utc(this.to);\n\n      if (from.isValid() && to.isValid()) {\n        this.$emit('range', {\n          from: this.fmt(from),\n          to: this.fmt(to)\n        });\n      } else {\n        this.$emit('range', {});\n      }\n    },\n    reset: function reset() {\n      this.scanned = false;\n      this.$emit('range', {});\n    }\n  },\n  watch: {\n    from: function from() {\n      this.emitManualEntry();\n    },\n    to: function to() {\n      this.emitManualEntry();\n    },\n    config: function config() {\n      this.reset();\n    },\n    tab: function tab() {\n      this.reset();\n    },\n    selectedRangeIndex: function selectedRangeIndex() {\n      var selectedRange = this.ranges[this.selectedRangeIndex];\n      if (selectedRange) this.emitRange(selectedRange);\n    }\n  }\n};",{"version":3,"sources":["rangepicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,CAAA,MAAA,QAAA;AACA,SAAA,IAAA,QAAA,qBAAA,C,CACA;;AAEA,eAAA;AACA,SAAA,CAAA,QAAA,CADA;AAEA,QAAA,gBAAA;AACA,WAAA;AACA,eAAA,KADA;AACA;AACA,cAAA,EAFA;AAGA,0BAAA,CAAA,CAHA;AAIA,WAAA,MAJA;AAMA,YAAA,EANA;AAOA,UAAA;AAPA,KAAA;AASA,GAZA;AAaA,WAAA;AACA,UAAA,gBAAA;AAAA;;AACA,WAAA,OAAA,GAAA,UAAA;AACA,WAAA,kBAAA,GAAA,CAAA,CAAA;AAEA,WAAA,MAAA,EAAA,KAAA,MAAA,EAAA,UAAA,GAAA,EAAA,QAAA,EAAA;AACA,cAAA,OAAA,GAAA,IAAA;AACA,cAAA,MAAA,GAAA,QAAA;AACA,cAAA,kBAAA,GAAA,CAAA;AACA,OAJA;AAKA,KAVA;AAWA,gBAAA,oBAAA,KAAA,EAAA;AACA,UAAA,MAAA,SAAA,GAAA;AAAA,eAAA,IAAA,MAAA,CAAA,kBAAA,CAAA;AAAA,OAAA;;AACA,UAAA,OAAA,OAAA,IAAA,CAAA,MAAA,IAAA,CAAA;AACA,UAAA,KAAA,OAAA,IAAA,CAAA,MAAA,EAAA,CAAA;AACA,UAAA,OAAA,OAAA,QAAA,CAAA,GAAA,IAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA;AACA,uBAAA,IAAA,IAAA,CAAA,iBAAA,IAAA,EAAA,CAAA,eAAA,IAAA;AACA,KAjBA;AAkBA,WAAA,eAAA,GAAA;AAAA,aAAA,OAAA,IAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AAAA,KAlBA;AAmBA,SAAA,aAAA,GAAA;AAAA,aAAA,IAAA,GAAA,GAAA,MAAA,EAAA;AAAA,KAnBA;AAoBA,eAAA,mBAAA,KAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA;AACA,cAAA,KAAA,KAAA,CAAA,MAAA,IAAA,CADA;AAEA,YAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AAFA,OAAA;AAIA,KAzBA;AA0BA,qBAAA,2BAAA;AACA,UAAA,KAAA,IAAA,CAAA,MAAA,GAAA,GAAA,IAAA,KAAA,IAAA,CAAA,MAAA,GAAA,GAAA,EACA;AACA,eAAA,KAAA,KAAA,CAAA,OAAA,EAAA,EAAA,CAAA;AAEA,UAAA,OAAA,OAAA,GAAA,CAAA,KAAA,IAAA,CAAA;AACA,UAAA,KAAA,OAAA,GAAA,CAAA,KAAA,EAAA,CAAA;;AAEA,UAAA,KAAA,OAAA,MAAA,GAAA,OAAA,EAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA;AACA,gBAAA,KAAA,GAAA,CAAA,IAAA,CADA;AAEA,cAAA,KAAA,GAAA,CAAA,EAAA;AAFA,SAAA;AAIA,OALA,MAKA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,EAAA;AACA;AACA,KA1CA;AA2CA,WAAA,iBAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,EAAA;AACA;AA9CA,GAbA;AA6DA,SAAA;AACA,UAAA,gBAAA;AACA,WAAA,eAAA;AACA,KAHA;AAIA,QAAA,cAAA;AACA,WAAA,eAAA;AACA,KANA;AAOA,YAAA,kBAAA;AACA,WAAA,KAAA;AACA,KATA;AAUA,SAAA,eAAA;AACA,WAAA,KAAA;AACA,KAZA;AAaA,wBAAA,8BAAA;AACA,UAAA,gBAAA,KAAA,MAAA,CAAA,KAAA,kBAAA,CAAA;AACA,UAAA,aAAA,EACA,KAAA,SAAA,CAAA,aAAA;AACA;AAjBA;AA7DA,CAAA","sourcesContent":["<template lang='pug'>\ndiv\n  h3 Daterange\n  template(v-if='tab === \"scan\"')\n    .txt--center(v-if='!scanned')\n      a.w100--s.btn--primary.scan-btn(href='#', v-on:click.prevent='scan') Scan available data\n    .txt--center(v-if='scanned == \"fetching\"')\n      p.scan-btn Scanning..\n    template(v-if='scanned == true')\n      template(v-if='ranges.length === 0')\n        p\n          strong Unable to find any local data, do you have local data available for\n            | \"{{ config.watch.exchange }}:{{ config.watch.currency }}/{{ config.watch.asset }}\"?\n      template(v-else)\n        label(for='exchange').wrapper Run simulation over:\n        form.radio.grd\n          div.grd-row(v-for='(range, i) in ranges').m1\n            input.grd-row-col-1-6(type='radio', :value='i', v-model='selectedRangeIndex')\n            label.grd-row-col-5-6(:for='i') {{ printRange(range) }}\n      p\n        em\n          a(href='#', v-on:click.prevent='scan') rescan\n    p.txt--center\n      em\n        a(href='#', v-on:click.prevent='tab = \"manual\"') Or manually set a daterange\n  template(v-if='tab === \"manual\"')\n    div\n      label(for='from') From:\n      input(v-model='from')\n    div\n      label(for='to') To:\n      input(v-model='to')\n    p.txt--center\n    em\n      a(href='#', v-on:click.prevent='tab = \"scan\"') Or scan for a daterange\n</template>\n\n<script>\n\nimport _ from 'lodash'\nimport { post } from '../../../tools/ajax'\n// global moment\n\nexport default {\n  props: ['config'],\n  data: () => {\n    return {\n      scanned: false, // 'fetching', true\n      ranges: [],\n      selectedRangeIndex: -1,\n      tab: 'scan',\n\n      from: '',\n      to: ''\n    }\n  },\n  methods: {\n    scan: function() {\n      this.scanned = 'fetching';\n      this.selectedRangeIndex = -1;\n\n      post('scan', this.config, (err, response) => {\n        this.scanned = true;\n        this.ranges = response;\n        this.selectedRangeIndex = 0;\n      });\n    },\n    printRange: function(range) {\n      let fmt = mom => mom.format('YYYY-MM-DD HH:mm')\n      let from = moment.unix(range.from);\n      let to = moment.unix(range.to);\n      let diff = moment.duration(to.diff(from)).humanize();\n      return `${fmt(from)} to ${fmt(to)} (${diff})`;\n    },\n    fmtTs: (mom) => moment.unix(mom).utc(),\n    fmt: (mom) => mom.utc().format(),\n    emitRange: function(range) {\n      this.$emit('range', {\n        from: this.fmtTs(range.from),\n        to: this.fmtTs(range.to)\n      });\n    },\n    emitManualEntry: function() {\n      if(this.from.length < '4' || this.from.length < '4')\n        // this cannot possibly be a valid date\n        return this.$emit('range', {})\n\n      let from = moment.utc(this.from);\n      let to = moment.utc(this.to);\n\n      if(from.isValid() && to.isValid()) {\n        this.$emit('range', {\n          from: this.fmt(from),\n          to: this.fmt(to)\n        })\n      } else {\n        this.$emit('range', {});\n      }\n    },\n    reset: function() {\n      this.scanned = false;\n      this.$emit('range', {})\n    }\n  },\n  watch: {\n    from: function() {\n      this.emitManualEntry();\n    },\n    to: function() {\n      this.emitManualEntry();\n    },\n    config: function() {\n      this.reset();\n    },\n    tab: function() {\n      this.reset();\n    },\n    selectedRangeIndex: function() {\n      let selectedRange = this.ranges[this.selectedRangeIndex];\n      if(selectedRange)\n        this.emitRange(selectedRange);\n    }\n  }\n}\n</script>\n\n<style>\n\n.scan-btn {\n  margin-top: 80px;\n  margin-bottom: 30px;\n}\n\n.radio label {\n  margin-top: 0;\n}\n\n</style>\n"],"sourceRoot":"src/components/global/configbuilder"}]}