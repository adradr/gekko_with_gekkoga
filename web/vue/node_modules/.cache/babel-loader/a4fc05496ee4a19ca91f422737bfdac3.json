{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/marketpicker.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/configbuilder/marketpicker.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport rangePicker from './rangepicker.vue';\nimport rangeCreator from './rangecreator.vue';\nimport { get } from '../../../tools/ajax';\nexport default {\n  props: ['onlyTradable', 'onlyImportable'],\n  data: function data() {\n    return {\n      // defaults:\n      exchange: 'poloniex',\n      currency: 'USDT',\n      asset: 'BTC'\n    };\n  },\n  created: function created() {\n    this.emitConfig();\n  },\n  computed: {\n    exchanges: function exchanges() {\n      var exchanges = Object.assign({}, this.$store.state.exchanges);\n      if (_.isEmpty(exchanges)) return false;\n\n      if (this.onlyTradable) {\n        _.each(exchanges, function (e, name) {\n          if (!e.tradable) delete exchanges[name];\n        });\n      }\n\n      if (this.onlyImportable) {\n        _.each(exchanges, function (e, name) {\n          if (!e.importable) delete exchanges[name];\n        });\n      }\n\n      return exchanges;\n    },\n    markets: function markets() {\n      return this.exchanges ? this.exchanges[this.exchange] : null;\n    },\n    assets: function assets() {\n      return this.exchanges ? this.exchanges[this.exchange].markets[this.currency] : null;\n    },\n    currencies: function currencies() {\n      return this.exchanges ? _.keys(this.exchanges[this.exchange].markets) : null;\n    },\n    watchConfig: function watchConfig() {\n      return {\n        watch: {\n          exchange: this.exchange,\n          currency: this.currency,\n          asset: this.asset\n        }\n      };\n    }\n  },\n  watch: {\n    currency: function currency() {\n      this.emitConfig();\n    },\n    asset: function asset() {\n      this.emitConfig();\n    },\n    market: function market() {\n      this.emitConfig();\n    },\n    exchanges: function exchanges() {\n      this.emitConfig();\n    },\n    exchange: function exchange() {\n      this.emitConfig();\n    }\n  },\n  methods: {\n    emitConfig: function emitConfig() {\n      this.$emit('market', this.watchConfig);\n    }\n  }\n};",{"version":3,"sources":["marketpicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AACA,OAAA,YAAA,MAAA,oBAAA;AACA,SAAA,GAAA,QAAA,qBAAA;AAEA,eAAA;AACA,SAAA,CAAA,cAAA,EAAA,gBAAA,CADA;AAEA,QAAA,gBAAA;AACA,WAAA;AACA;AACA,gBAAA,UAFA;AAGA,gBAAA,MAHA;AAIA,aAAA;AAJA,KAAA;AAMA,GATA;AAUA,WAAA,mBAAA;AACA,SAAA,UAAA;AACA,GAZA;AAaA,YAAA;AACA,eAAA,qBAAA;AAEA,UAAA,YAAA,OAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AAEA,UAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EACA,OAAA,KAAA;;AAEA,UAAA,KAAA,YAAA,EAAA;AACA,UAAA,IAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,IAAA,EAAA;AACA,cAAA,CAAA,EAAA,QAAA,EACA,OAAA,UAAA,IAAA,CAAA;AACA,SAHA;AAIA;;AAEA,UAAA,KAAA,cAAA,EAAA;AACA,UAAA,IAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,IAAA,EAAA;AACA,cAAA,CAAA,EAAA,UAAA,EACA,OAAA,UAAA,IAAA,CAAA;AACA,SAHA;AAIA;;AAEA,aAAA,SAAA;AACA,KAvBA;AAwBA,aAAA,mBAAA;AACA,aAAA,KAAA,SAAA,GAAA,KAAA,SAAA,CAAA,KAAA,QAAA,CAAA,GAAA,IAAA;AACA,KA1BA;AA4BA,YAAA,kBAAA;AACA,aAAA,KAAA,SAAA,GAAA,KAAA,SAAA,CAAA,KAAA,QAAA,EAAA,OAAA,CAAA,KAAA,QAAA,CAAA,GAAA,IAAA;AACA,KA9BA;AAgCA,gBAAA,sBAAA;AACA,aAAA,KAAA,SAAA,GAAA,EAAA,IAAA,CAAA,KAAA,SAAA,CAAA,KAAA,QAAA,EAAA,OAAA,CAAA,GAAA,IAAA;AACA,KAlCA;AAmCA,iBAAA,uBAAA;AACA,aAAA;AACA,eAAA;AACA,oBAAA,KAAA,QADA;AAEA,oBAAA,KAAA,QAFA;AAGA,iBAAA,KAAA;AAHA;AADA,OAAA;AAOA;AA3CA,GAbA;AA2DA,SAAA;AACA,cAAA,oBAAA;AAAA,WAAA,UAAA;AAAA,KADA;AAEA,WAAA,iBAAA;AAAA,WAAA,UAAA;AAAA,KAFA;AAGA,YAAA,kBAAA;AAAA,WAAA,UAAA;AAAA,KAHA;AAIA,eAAA,qBAAA;AAAA,WAAA,UAAA;AAAA,KAJA;AAKA,cAAA,oBAAA;AAAA,WAAA,UAAA;AAAA;AALA,GA3DA;AAmEA,WAAA;AACA,gBAAA,sBAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,WAAA;AACA;AAHA;AAnEA,CAAA","sourcesContent":["<template lang='pug'>\ndiv\n  .mx1\n    label(for='exchange').wrapper Exchange:\n    .custom-select.button\n      select(v-model='exchange')\n        option(v-for='(market, e) in exchanges') {{ e }}\n  .grd-row\n    .grd-row-col-3-6.mx1\n      label(for='currency') Currency:\n      .custom-select.button\n        select(v-model='currency')\n          option(v-for='cur in currencies') {{ cur }}\n    .grd-row-col-3-6.mx1\n      label(for='asset') Asset:\n      .custom-select.button\n        select(v-model='asset')\n          option(v-for='asst in assets') {{ asst }}\n</template>\n\n<script>\n\nimport _ from 'lodash'\nimport rangePicker from './rangepicker.vue'\nimport rangeCreator from './rangecreator.vue'\nimport { get } from '../../../tools/ajax'\n\nexport default {\n  props: ['onlyTradable', 'onlyImportable'],\n  data: () => {\n    return {\n      // defaults:\n      exchange: 'poloniex',\n      currency: 'USDT',\n      asset: 'BTC',\n    };\n  },\n  created: function() {\n    this.emitConfig();\n  },\n  computed: {\n    exchanges: function() {\n\n      let exchanges = Object.assign({}, this.$store.state.exchanges);\n\n      if(_.isEmpty(exchanges))\n        return false;\n\n      if(this.onlyTradable) {\n        _.each(exchanges, (e, name) => {\n          if(!e.tradable)\n            delete exchanges[name];\n        });\n      }\n\n      if(this.onlyImportable) {\n        _.each(exchanges, (e, name) => {\n          if(!e.importable)\n            delete exchanges[name];\n        });\n      }\n\n      return exchanges;\n    },\n    markets: function() {\n      return this.exchanges ? this.exchanges[ this.exchange ] : null;\n    },\n\n    assets: function() {\n      return this.exchanges ? this.exchanges[this.exchange].markets[this.currency] : null;\n    },\n\n    currencies: function() {\n      return this.exchanges ? _.keys( this.exchanges[this.exchange].markets ) : null;\n    },\n    watchConfig: function() {\n      return {\n        watch: {\n          exchange: this.exchange,\n          currency: this.currency,\n          asset: this.asset,\n        }\n      }\n    }\n  },\n\n  watch: {\n    currency: function() { this.emitConfig() },\n    asset: function() { this.emitConfig() },\n    market: function() { this.emitConfig() },\n    exchanges: function() { this.emitConfig() },\n    exchange: function() { this.emitConfig() }\n  },\n\n  methods: {\n    emitConfig: function() {\n      this.$emit('market', this.watchConfig);\n    }\n  }\n}\n</script>\n</style>\n"],"sourceRoot":"src/components/global/configbuilder"}]}