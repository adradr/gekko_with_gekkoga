{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/data/import/single.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/data/import/single.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport progressBar from '../../global/progressBar.vue';\nimport spinner from '../../global/blockSpinner.vue';\nexport default {\n  components: {\n    progressBar: progressBar,\n    spinner: spinner\n  },\n  computed: {\n    data: function data() {\n      return _.find(this.$store.state.imports, {\n        id: this.$route.params.id\n      });\n    },\n    initialized: function initialized() {\n      if (this.data && this.latest.isValid()) return true;\n    },\n    latest: function latest() {\n      if (this.data) return this.mom(this.data.latest);\n    },\n    fromEndMs: function fromEndMs() {\n      if (this.data) return this.to.diff(this.latest);\n    },\n    fromEnd: function fromEnd() {\n      if (!this.latest) return 'LOADING';\n      return humanizeDuration(this.fromEndMs);\n    },\n    from: function from() {\n      if (this.data) return this.mom(this.data.from);\n    },\n    to: function to() {\n      if (this.data) return this.mom(this.data.to);\n    },\n    timespan: function timespan() {\n      if (this.data) return this.to.diff(this.from);\n    },\n    progress: function progress() {\n      if (!this.data) return;\n      var current = this.timespan - this.fromEndMs;\n      return 100 * current / this.timespan;\n    }\n  },\n  methods: {\n    fmt: function fmt(mom) {\n      return mom.format('YYYY-MM-DD HH:mm:ss');\n    },\n    mom: function mom(str) {\n      return moment.utc(str);\n    }\n  }\n};",{"version":3,"sources":["single.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,CAAA,MAAA,QAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AAEA,eAAA;AACA,cAAA;AACA,4BADA;AAEA;AAFA,GADA;AAKA,YAAA;AACA,UAAA,gBAAA;AACA,aAAA,EAAA,IAAA,CACA,KAAA,MAAA,CAAA,KAAA,CAAA,OADA,EAEA;AAAA,YAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAAA,OAFA,CAAA;AAIA,KANA;AAOA,iBAAA,uBAAA;AACA,UAAA,KAAA,IAAA,IAAA,KAAA,MAAA,CAAA,OAAA,EAAA,EACA,OAAA,IAAA;AACA,KAVA;AAWA,YAAA,kBAAA;AACA,UAAA,KAAA,IAAA,EACA,OAAA,KAAA,GAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA;AACA,KAdA;AAeA,eAAA,qBAAA;AACA,UAAA,KAAA,IAAA,EACA,OAAA,KAAA,EAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA;AACA,KAlBA;AAmBA,aAAA,mBAAA;AACA,UAAA,CAAA,KAAA,MAAA,EACA,OAAA,SAAA;AAEA,aAAA,iBAAA,KAAA,SAAA,CAAA;AACA,KAxBA;AAyBA,UAAA,gBAAA;AACA,UAAA,KAAA,IAAA,EACA,OAAA,KAAA,GAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA;AACA,KA5BA;AA6BA,QAAA,cAAA;AACA,UAAA,KAAA,IAAA,EACA,OAAA,KAAA,GAAA,CAAA,KAAA,IAAA,CAAA,EAAA,CAAA;AACA,KAhCA;AAiCA,cAAA,oBAAA;AACA,UAAA,KAAA,IAAA,EACA,OAAA,KAAA,EAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA;AACA,KApCA;AAqCA,cAAA,oBAAA;AACA,UAAA,CAAA,KAAA,IAAA,EACA;AAEA,UAAA,UAAA,KAAA,QAAA,GAAA,KAAA,SAAA;AACA,aAAA,MAAA,OAAA,GAAA,KAAA,QAAA;AACA;AA3CA,GALA;AAkDA,WAAA;AACA,SAAA,kBAAA;AAAA,aAAA,IAAA,MAAA,CAAA,qBAAA,CAAA;AAAA,KADA;AAEA,SAAA;AAAA,aAAA,OAAA,GAAA,CAAA,GAAA,CAAA;AAAA;AAFA;AAlDA,CAAA","sourcesContent":["<template lang='pug'>\n  div.contain.my2\n    div(v-if='data && !data.done')\n      h2 Importing data..\n      .grd\n        .grd-row\n          .grd-row-col-2-6 <strong>Market:</strong>\n          .grd-row-col-4-6 {{ data.watch.exchange }}\n        .grd-row\n          .grd-row-col-2-6 <strong>Currency/Asset:</strong>\n          .grd-row-col-4-6 {{ data.watch.currency }}/{{ data.watch.asset }}\n\n      .grd\n        .grd-row\n          .grd-row-col-2-6 <strong>From:</strong>\n          .grd-row-col-4-6 {{ fmt(from) }}\n        .grd-row\n          .grd-row-col-2-6 <strong>To:</strong>\n          .grd-row-col-4-6 {{ fmt(to) }}\n        .grd-row(v-if='initialized')\n          .grd-row-col-2-6 <strong>Imported data until:</strong>\n          .grd-row-col-4-6 {{ fmt(latest) }}\n        .grd-row(v-if='initialized')\n          .grd-row-col-2-6 <strong>Remaining:</strong>\n          .grd-row-col-4-6 {{ fromEnd }}\n      spinner(v-if='!initialized')\n      .contain(v-if='initialized')\n        progressBar(:progress='progress')\n      p \n        em (you don't have to wait until the import is done,\n          | you can already start \n          router-link(to='/backtest') backtesting\n          | ).\n    div(v-if='data && data.done').txt--center\n      h2 Import done\n      p \n        | Go and \n        router-link(to='/backtest') backtest\n        |  with your new data!\n    div(v-if='!data').txt--center\n      h2 ERROR: Unknown import\n      p \n        I don't know this import..\n</template>\n\n<script>\n\nimport _ from 'lodash';\nimport progressBar from '../../global/progressBar.vue'\nimport spinner from '../../global/blockSpinner.vue'\n\nexport default {\n  components: {\n    progressBar,\n    spinner\n  },\n  computed: {\n    data: function() {\n      return _.find(\n        this.$store.state.imports,\n        { id: this.$route.params.id }\n      );\n    },\n    initialized: function() {\n      if(this.data && this.latest.isValid())\n        return true\n    },\n    latest: function() {\n      if(this.data)\n        return this.mom(this.data.latest);\n    },\n    fromEndMs: function() {\n      if(this.data)\n        return this.to.diff(this.latest);\n    },\n    fromEnd: function() {\n      if(!this.latest)\n        return 'LOADING'\n\n      return humanizeDuration(this.fromEndMs);\n    },\n    from: function() {\n      if(this.data)\n        return this.mom(this.data.from)\n    },\n    to: function() {\n      if(this.data)\n        return this.mom(this.data.to)\n    },\n    timespan: function() {\n      if(this.data)\n        return this.to.diff(this.from)\n    },\n    progress: function() {\n      if(!this.data)\n        return;\n\n      const current = this.timespan - this.fromEndMs;\n      return 100 * current / this.timespan;\n    }\n  },\n  methods: {\n    fmt: mom => { return mom.format('YYYY-MM-DD HH:mm:ss') },\n    mom: str => moment.utc(str)\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components/data/import"}]}