{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/backtester/backtester.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/backtester/backtester.vue","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport configBuilder from './backtestConfigBuilder.vue';\nimport result from './result/result.vue';\nimport { post } from '../../tools/ajax';\nimport spinner from '../global/blockSpinner.vue';\nexport default {\n  data: function data() {\n    return {\n      backtestable: false,\n      backtestState: 'idle',\n      backtestResult: false,\n      config: false\n    };\n  },\n  methods: {\n    check: function check(config) {\n      // console.log('CHECK', config);\n      this.config = config;\n      if (!config.valid) return this.backtestable = false;\n      this.backtestable = true;\n    },\n    run: function run() {\n      var _this = this;\n\n      this.backtestState = 'fetching';\n      post('backtest', this.config, function (error, response) {\n        _this.backtestState = 'fetched';\n        _this.backtestResult = response;\n      });\n    }\n  },\n  components: {\n    configBuilder: configBuilder,\n    result: result,\n    spinner: spinner\n  }\n};",{"version":3,"sources":["backtester.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,OAAA,aAAA,MAAA,6BAAA;AACA,OAAA,MAAA,MAAA,qBAAA;AACA,SAAA,IAAA,QAAA,kBAAA;AACA,OAAA,OAAA,MAAA,4BAAA;AAEA,eAAA;AACA,QAAA,gBAAA;AACA,WAAA;AACA,oBAAA,KADA;AAEA,qBAAA,MAFA;AAGA,sBAAA,KAHA;AAIA,cAAA;AAJA,KAAA;AAMA,GARA;AASA,WAAA;AACA,WAAA,eAAA,MAAA,EAAA;AACA;AACA,WAAA,MAAA,GAAA,MAAA;AAEA,UAAA,CAAA,OAAA,KAAA,EACA,OAAA,KAAA,YAAA,GAAA,KAAA;AAEA,WAAA,YAAA,GAAA,IAAA;AACA,KATA;AAUA,SAAA,eAAA;AAAA;;AACA,WAAA,aAAA,GAAA,UAAA;AAEA,WAAA,UAAA,EAAA,KAAA,MAAA,EAAA,UAAA,KAAA,EAAA,QAAA,EAAA;AACA,cAAA,aAAA,GAAA,SAAA;AACA,cAAA,cAAA,GAAA,QAAA;AACA,OAHA;AAIA;AAjBA,GATA;AA4BA,cAAA;AACA,gCADA;AAEA,kBAFA;AAGA;AAHA;AA5BA,CAAA","sourcesContent":["<template lang='pug'>\n  div\n    h2.contain Backtest\n    .hr\n    config-builder(v-on:config='check')\n    div(v-if='backtestable')\n      .txt--center\n        a.w100--s.my1.btn--primary(href='#', v-if='backtestState !== \"fetching\"', v-on:click.prevent='run') Backtest\n        div(v-if='backtestState === \"fetching\"').scan-btn\n          p Running backtest..\n          spinner\n    result(v-if='backtestResult && backtestState === \"fetched\"', :result='backtestResult')\n</template>\n\n<script>\nimport configBuilder from './backtestConfigBuilder.vue'\nimport result from './result/result.vue'\nimport { post } from '../../tools/ajax'\nimport spinner from '../global/blockSpinner.vue'\n\nexport default {\n  data: () => {\n    return {\n      backtestable: false,\n      backtestState: 'idle',\n      backtestResult: false,\n      config: false,\n    }\n  },\n  methods: {\n    check: function(config) {\n      // console.log('CHECK', config);\n      this.config = config;\n\n      if(!config.valid)\n        return this.backtestable = false;\n\n      this.backtestable = true;\n    },\n    run: function() {\n      this.backtestState = 'fetching';\n\n      post('backtest', this.config, (error, response) => {\n        this.backtestState = 'fetched';\n        this.backtestResult = response;\n      });\n    }\n  },\n  components: {\n    configBuilder,\n    result,\n    spinner\n  }\n}\n</script>\n"],"sourceRoot":"src/components/backtester"}]}