{"remainingRequest":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js!/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/mixins/dataset.js","dependencies":[{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/src/components/global/mixins/dataset.js","mtime":1569604667000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/cache-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/thread-loader/dist/cjs.js","mtime":1569708698000},{"path":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { post } from '../../../tools/ajax';\nvar mixin = {\n  data: function data() {\n    return {\n      datasets: [],\n      datasetScanstate: 'idle',\n      unscannableMakets: []\n    };\n  },\n  methods: {\n    scan: function scan() {\n      var _this = this;\n\n      this.datasetScanstate = 'scanning';\n      post('scansets', {}, function (error, response) {\n        _this.datasetScanstate = 'scanned';\n        _this.unscannableMakets = response.errors;\n        var sets = [];\n        response.datasets.forEach(function (market) {\n          market.ranges.forEach(function (range, i) {\n            sets.push({\n              exchange: market.exchange,\n              currency: market.currency,\n              asset: market.asset,\n              from: moment.unix(range.from).utc(),\n              to: moment.unix(range.to).utc(),\n              id: market.exchange + market.asset + market.currency + i\n            });\n          });\n        }); // for now, filter out sets smaller than 3 hours..\n\n        sets = sets.filter(function (set) {\n          if (set.to.diff(set.from, 'hours') > 2) return true;\n        });\n        sets = sets.sort(function (a, b) {\n          var adiff = a.to.diff(a.from);\n          var bdiff = b.to.diff(b.from);\n          if (adiff < bdiff) return -1;\n          if (adiff > bdiff) return 1;\n          return 0;\n        }).reverse();\n        _this.datasets = sets;\n      });\n    }\n  }\n};\nexport default mixin;",{"version":3,"sources":["src/components/global/mixins/dataset.js"],"names":["post","mixin","data","datasets","datasetScanstate","unscannableMakets","methods","scan","error","response","errors","sets","forEach","market","ranges","range","i","push","exchange","currency","asset","from","moment","unix","utc","to","id","filter","set","diff","sort","a","b","adiff","bdiff","reverse"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,qBAArB;AAEA,IAAIC,QAAQ;AACVC,QAAM,gBAAM;AACV,WAAO;AACLC,gBAAU,EADL;AAELC,wBAAkB,MAFb;AAGLC,yBAAmB;AAHd,KAAP;AAKD,GAPS;AAQVC,WAAS;AACPC,UAAM,gBAAW;AAAA;;AACf,WAAKH,gBAAL,GAAwB,UAAxB;AAEAJ,WAAK,UAAL,EAAiB,EAAjB,EAAqB,UAACQ,KAAD,EAAQC,QAAR,EAAqB;AACxC,cAAKL,gBAAL,GAAwB,SAAxB;AAEA,cAAKC,iBAAL,GAAyBI,SAASC,MAAlC;AAEA,YAAIC,OAAO,EAAX;AAEAF,iBAASN,QAAT,CAAkBS,OAAlB,CAA0B,kBAAU;AAClCC,iBAAOC,MAAP,CAAcF,OAAd,CAAsB,UAACG,KAAD,EAAQC,CAAR,EAAc;AAClCL,iBAAKM,IAAL,CAAU;AACRC,wBAAUL,OAAOK,QADT;AAERC,wBAAUN,OAAOM,QAFT;AAGRC,qBAAOP,OAAOO,KAHN;AAIRC,oBAAMC,OAAOC,IAAP,CAAYR,MAAMM,IAAlB,EAAwBG,GAAxB,EAJE;AAKRC,kBAAIH,OAAOC,IAAP,CAAYR,MAAMU,EAAlB,EAAsBD,GAAtB,EALI;AAMRE,kBAAIb,OAAOK,QAAP,GAAkBL,OAAOO,KAAzB,GAAiCP,OAAOM,QAAxC,GAAmDH;AAN/C,aAAV;AAQD,WATD;AAUD,SAXD,EAPwC,CAoBxC;;AACAL,eAAOA,KAAKgB,MAAL,CAAY,eAAO;AACxB,cAAGC,IAAIH,EAAJ,CAAOI,IAAP,CAAYD,IAAIP,IAAhB,EAAsB,OAAtB,IAAiC,CAApC,EACE,OAAO,IAAP;AACH,SAHM,CAAP;AAKAV,eAAOA,KAAKmB,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB,cAAIC,QAAQF,EAAEN,EAAF,CAAKI,IAAL,CAAUE,EAAEV,IAAZ,CAAZ;AACA,cAAIa,QAAQF,EAAEP,EAAF,CAAKI,IAAL,CAAUG,EAAEX,IAAZ,CAAZ;AAEA,cAAGY,QAAQC,KAAX,EACE,OAAO,CAAC,CAAR;AAEF,cAAGD,QAAQC,KAAX,EACE,OAAO,CAAP;AAEF,iBAAO,CAAP;AACD,SAXM,EAWJC,OAXI,EAAP;AAaA,cAAKhC,QAAL,GAAgBQ,IAAhB;AACD,OAxCD;AAyCD;AA7CM;AARC,CAAZ;AAyDA,eAAeV,KAAf","sourceRoot":"/Users/adr/Library/Mobile Documents/com~apple~CloudDocs/gekko/web/vue","sourcesContent":["import { post } from '../../../tools/ajax'\n\nvar mixin = {\n  data: () => {\n    return {\n      datasets: [],\n      datasetScanstate: 'idle',\n      unscannableMakets: []\n    }    \n  },\n  methods: {\n    scan: function() {\n      this.datasetScanstate = 'scanning';\n\n      post('scansets', {}, (error, response) => {\n        this.datasetScanstate = 'scanned';\n\n        this.unscannableMakets = response.errors;\n\n        let sets = [];\n\n        response.datasets.forEach(market => {\n          market.ranges.forEach((range, i) => {\n            sets.push({\n              exchange: market.exchange,\n              currency: market.currency,\n              asset: market.asset,\n              from: moment.unix(range.from).utc(),\n              to: moment.unix(range.to).utc(),\n              id: market.exchange + market.asset + market.currency + i\n            });\n          });\n        });\n\n        // for now, filter out sets smaller than 3 hours..\n        sets = sets.filter(set => {\n          if(set.to.diff(set.from, 'hours') > 2)\n            return true;\n        });\n\n        sets = sets.sort((a, b) => {\n          let adiff = a.to.diff(a.from);\n          let bdiff = b.to.diff(b.from);\n\n          if(adiff < bdiff)\n            return -1;\n\n          if(adiff > bdiff)\n            return 1;\n\n          return 0;\n        }).reverse();\n\n        this.datasets = sets;\n      })\n    }\n  }\n}\n\nexport default mixin;"]}]}